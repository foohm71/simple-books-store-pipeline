"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.valueForFrequency = void 0;
const sourcegen_1 = require("../sourcegen");
const frequency_1 = require("./frequency");
function valueForFrequency(genfile, frequency) {
    if (typeof frequency === 'number') {
        return new sourcegen_1.NumberValue(frequency);
    }
    genfile.namedImport('Frequency', 'checkly/constructs');
    const predefined = {
        EVERY_10S: frequency_1.Frequency.EVERY_10S,
        EVERY_20S: frequency_1.Frequency.EVERY_20S,
        EVERY_30S: frequency_1.Frequency.EVERY_30S,
        EVERY_1M: frequency_1.Frequency.EVERY_1M,
        EVERY_2M: frequency_1.Frequency.EVERY_2M,
        EVERY_5M: frequency_1.Frequency.EVERY_5M,
        EVERY_10M: frequency_1.Frequency.EVERY_10M,
        EVERY_15M: frequency_1.Frequency.EVERY_15M,
        EVERY_30M: frequency_1.Frequency.EVERY_30M,
        EVERY_1H: frequency_1.Frequency.EVERY_1H,
        EVERY_2H: frequency_1.Frequency.EVERY_2H,
        EVERY_3H: frequency_1.Frequency.EVERY_3H,
        EVERY_6H: frequency_1.Frequency.EVERY_6H,
        EVERY_12H: frequency_1.Frequency.EVERY_12H,
        EVERY_24H: frequency_1.Frequency.EVERY_24H,
    };
    for (const [shortcut, definition] of Object.entries(predefined)) {
        if (frequency.frequency !== definition.frequency) {
            continue;
        }
        if (frequency.frequencyOffset !== definition.frequencyOffset) {
            continue;
        }
        return (0, sourcegen_1.expr)((0, sourcegen_1.ident)('Frequency'), builder => {
            builder.member((0, sourcegen_1.ident)(shortcut));
        });
    }
    return (0, sourcegen_1.expr)((0, sourcegen_1.ident)('Frequency'), builder => {
        builder.new(builder => {
            builder.number(frequency.frequency);
            if (frequency.frequencyOffset) {
                builder.number(frequency.frequencyOffset);
            }
        });
    });
}
exports.valueForFrequency = valueForFrequency;
//# sourceMappingURL=frequency-codegen.js.map