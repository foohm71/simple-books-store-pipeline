import { Check, CheckProps } from './check';
import { IPFamily } from './api-check';
import { Assertion as CoreAssertion, NumericAssertionBuilder, GeneralAssertionBuilder } from './internal/assertion';
type TcpAssertionSource = 'RESPONSE_DATA' | 'RESPONSE_TIME';
export type TcpAssertion = CoreAssertion<TcpAssertionSource>;
export declare class TcpAssertionBuilder {
    static responseData(property?: string): GeneralAssertionBuilder<TcpAssertionSource>;
    static responseTime(): NumericAssertionBuilder<TcpAssertionSource>;
}
export interface TcpRequest {
    /**
     * The hostname the connection should be made to.
     *
     * Do not include a scheme or a port in the hostname.
     */
    hostname: string;
    /**
     * The port the connection should be made to.
     */
    port: number;
    /**
     * Check the main Checkly documentation on TCP assertions for specific values
     * that you can use in the "property" field.
     */
    assertions?: Array<TcpAssertion>;
    /**
     * The IP family to use for the connection.
     *
     * @default "IPv4"
     */
    ipFamily?: IPFamily;
    /**
     * The data to send to the target host.
     */
    data?: string;
}
export interface TcpCheckProps extends CheckProps {
    /**
     * Determines the request that the check is going to run.
     */
    request: TcpRequest;
    /**
     * The response time in milliseconds where a check should be considered degraded.
     */
    degradedResponseTime?: number;
    /**
     * The response time in milliseconds where a check should be considered failing.
     */
    maxResponseTime?: number;
}
/**
 * Creates an TCP Check
 *
 * @remarks
 *
 * This class make use of the TCP Checks endpoints.
 */
export declare class TcpCheck extends Check {
    request: TcpRequest;
    degradedResponseTime?: number;
    maxResponseTime?: number;
    /**
     * Constructs the TCP Check instance
     *
     * @param logicalId unique project-scoped resource name identification
     * @param props check configuration properties
     *
     * {@link https://checklyhq.com/docs/cli/constructs-reference/#tcpcheck Read more in the docs}
     */
    constructor(logicalId: string, props: TcpCheckProps);
    synthesize(): {
        checkType: string;
        request: TcpRequest;
        degradedResponseTime: number | undefined;
        maxResponseTime: number | undefined;
        name: string;
        activated: boolean | undefined;
        muted: boolean | undefined;
        shouldFail: boolean | undefined;
        runtimeId: string | undefined;
        locations: (keyof import("..").Region)[] | undefined;
        privateLocations: undefined;
        tags: string[] | undefined;
        frequency: number | undefined;
        frequencyOffset: number | undefined;
        groupId: import("./ref").Ref | undefined;
        environmentVariables: import("./key-value-pair").default[] | undefined;
        retryStrategy: import("./retry-strategy").RetryStrategy | null | undefined;
        doubleCheck: boolean | undefined;
        alertSettings: import("./alert-escalation-policy").AlertEscalation | undefined;
        useGlobalAlertSettings: boolean | undefined;
        runParallel: boolean | undefined;
        triggerIncident: {
            serviceId: import("./ref").Ref;
            severity: "MINOR" | "MEDIUM" | "MAJOR" | "CRITICAL";
            name: string;
            description: string;
            notifySubscribers: boolean;
        } | undefined;
    };
}
export {};
