"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.valueForKeyValuePair = void 0;
const sourcegen_1 = require("../sourcegen");
function valueForKeyValuePair(program, genfile, context, kv) {
    return (0, sourcegen_1.object)(builder => {
        builder.string('key', kv.key);
        if (kv.secret !== true) {
            builder.string('value', kv.value);
        }
        if (kv.locked === true) {
            builder.boolean('locked', kv.locked);
        }
        if (kv.secret === true) {
            const secretVariable = (0, sourcegen_1.ident)(kv.key, {
                format: 'SCREAMING_SNAKE_CASE',
            });
            if (context.registerKnownSecret(secretVariable.value)) {
                const secretsFile = program.generatedSupportFile('secrets');
                secretsFile.namedImport('secret', 'checkly/util');
                secretsFile.section((0, sourcegen_1.decl)(secretVariable, builder => {
                    builder.variable((0, sourcegen_1.expr)((0, sourcegen_1.ident)('secret'), builder => {
                        builder.call(builder => {
                            builder.string(secretVariable.value);
                        });
                    }));
                    builder.export();
                }));
            }
            genfile.namedImport(secretVariable.value, 'secrets', {
                relativeToSelf: true,
            });
            builder.value('value', secretVariable);
            builder.boolean('secret', true);
        }
    });
}
exports.valueForKeyValuePair = valueForKeyValuePair;
//# sourceMappingURL=key-value-pair-codegen.js.map