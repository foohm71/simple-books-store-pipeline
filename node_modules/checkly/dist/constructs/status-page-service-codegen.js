"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusPageServiceCodegen = exports.valueForStatusPageServiceFromId = void 0;
const codegen_1 = require("./internal/codegen");
const sourcegen_1 = require("../sourcegen");
const construct = 'StatusPageService';
function valueForStatusPageServiceFromId(genfile, physicalId) {
    genfile.namedImport(construct, 'checkly/constructs');
    return (0, sourcegen_1.expr)((0, sourcegen_1.ident)(construct), builder => {
        builder.member((0, sourcegen_1.ident)('fromId'));
        builder.call(builder => {
            builder.string(physicalId);
        });
    });
}
exports.valueForStatusPageServiceFromId = valueForStatusPageServiceFromId;
class StatusPageServiceCodegen extends codegen_1.Codegen {
    describe(resource) {
        return `Status Page Service: ${resource.name}`;
    }
    prepare(logicalId, resource, context) {
        const filePath = context.filePath('resources/status-pages/services', resource.name, {
            unique: true,
        });
        context.registerStatusPageService(resource.id, resource.name, this.program.generatedConstructFile(filePath.fullPath));
    }
    gencode(logicalId, resource, context) {
        const { id, file } = context.lookupStatusPageService(resource.id);
        file.namedImport(construct, 'checkly/constructs');
        file.section((0, sourcegen_1.decl)(id, builder => {
            builder.variable((0, sourcegen_1.expr)((0, sourcegen_1.ident)(construct), builder => {
                builder.new(builder => {
                    builder.string(logicalId);
                    builder.object(builder => {
                        builder.string('name', resource.name);
                    });
                });
            }));
            builder.export();
        }));
    }
}
exports.StatusPageServiceCodegen = StatusPageServiceCodegen;
//# sourceMappingURL=status-page-service-codegen.js.map