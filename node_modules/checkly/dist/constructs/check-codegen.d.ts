import { Codegen, Context } from './internal/codegen';
import { Program, ObjectValueBuilder, GeneratedFile } from '../sourcegen';
import { AlertEscalationResource } from './alert-escalation-policy-codegen';
import { ApiCheckCodegen } from './api-check-codegen';
import { BrowserCheckCodegen } from './browser-check-codegen';
import { CheckGroupCodegen } from './check-group-codegen';
import { EnvironmentVariable } from './environment-variable';
import { FrequencyResource } from './frequency-codegen';
import { HeartbeatCheckCodegen } from './heartbeat-check-codegen';
import { MultiStepCheckCodegen } from './multi-step-check-codegen';
import { RetryStrategyResource } from './retry-strategy-codegen';
import { TcpCheckCodegen } from './tcp-check-codegen';
export interface CheckResource {
    id: string;
    checkType: string;
    name: string;
    activated?: boolean;
    muted?: boolean;
    shouldFail?: boolean;
    runtimeId?: string;
    locations?: string[];
    tags?: string[];
    frequency?: FrequencyResource;
    environmentVariables?: EnvironmentVariable[];
    groupId?: number;
    alertSettings?: AlertEscalationResource;
    testOnly?: boolean;
    retryStrategy?: RetryStrategyResource;
    runParallel?: boolean;
}
export declare function buildCheckProps(program: Program, genfile: GeneratedFile, builder: ObjectValueBuilder, resource: CheckResource, context: Context): void;
export declare class CheckCodegen extends Codegen<CheckResource> {
    apiCheckCodegen: ApiCheckCodegen;
    browserCheckCodegen: BrowserCheckCodegen;
    checkGroupCodegen: CheckGroupCodegen;
    heartbeatCheckCodegen: HeartbeatCheckCodegen;
    multiStepCheckCodegen: MultiStepCheckCodegen;
    tcpCheckCodegen: TcpCheckCodegen;
    constructor(program: Program);
    describe(resource: CheckResource): string;
    gencode(logicalId: string, resource: CheckResource, context: Context): void;
}
