"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TcpCheck = exports.TcpAssertionBuilder = void 0;
const check_1 = require("./check");
const project_1 = require("./project");
const assertion_1 = require("./internal/assertion");
class TcpAssertionBuilder {
    static responseData(property) {
        return new assertion_1.GeneralAssertionBuilder('RESPONSE_DATA', property);
    }
    static responseTime() {
        return new assertion_1.NumericAssertionBuilder('RESPONSE_TIME');
    }
}
exports.TcpAssertionBuilder = TcpAssertionBuilder;
/**
 * Creates an TCP Check
 *
 * @remarks
 *
 * This class make use of the TCP Checks endpoints.
 */
class TcpCheck extends check_1.Check {
    request;
    degradedResponseTime;
    maxResponseTime;
    /**
     * Constructs the TCP Check instance
     *
     * @param logicalId unique project-scoped resource name identification
     * @param props check configuration properties
     *
     * {@link https://checklyhq.com/docs/cli/constructs-reference/#tcpcheck Read more in the docs}
     */
    constructor(logicalId, props) {
        super(logicalId, props);
        this.request = props.request;
        this.degradedResponseTime = props.degradedResponseTime;
        this.maxResponseTime = props.maxResponseTime;
        project_1.Session.registerConstruct(this);
        this.addSubscriptions();
        this.addPrivateLocationCheckAssignments();
    }
    synthesize() {
        return {
            ...super.synthesize(),
            checkType: 'TCP',
            request: this.request,
            degradedResponseTime: this.degradedResponseTime,
            maxResponseTime: this.maxResponseTime,
        };
    }
}
exports.TcpCheck = TcpCheck;
//# sourceMappingURL=tcp-check.js.map