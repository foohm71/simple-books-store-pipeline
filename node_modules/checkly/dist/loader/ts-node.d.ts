import { FileLoader, FileLoaderOptions } from './loader';
interface TSNodeService {
    enabled(enabled?: boolean): boolean;
}
export declare class UninitializedTSNodeFileLoaderState extends FileLoader {
    init?: Promise<void>;
    loadFile<T = unknown>(filePath: string): Promise<T>;
}
export declare class FailedTSNodeFileLoaderState extends FileLoader {
    error: Error;
    constructor(error: Error);
    loadFile<T = unknown>(filePath: string): Promise<T>;
}
export declare class InitializedTSNodeFileLoaderState extends FileLoader {
    service: TSNodeService;
    constructor(service: TSNodeService);
    loadFile<T = unknown>(filePath: string): Promise<T>;
}
export type TSNodeFileLoaderOptions = FileLoaderOptions;
export declare class TSNodeFileLoader extends FileLoader {
    static state: FileLoader;
    constructor(options?: TSNodeFileLoaderOptions);
    loadFile<T = unknown>(filePath: string): Promise<T>;
}
export {};
