import { ArgumentsValue } from './args';
import { ArrayValueBuilder } from './arraybuilder';
import { ExpressionValueBuilder } from './exprbuilder';
import { ObjectValueBuilder } from './objectbuilder';
import { Value } from './value';
export declare function args(build: (builder: ArgumentsValueBuilder) => void): ArgumentsValue;
export declare class ArgumentsValueBuilder {
    #private;
    empty(): this;
    string(value: string): this;
    boolean(value: boolean): this;
    number(value: number): this;
    null(): this;
    undefined(): this;
    ident(value: string): this;
    array(build: (builder: ArrayValueBuilder) => void): this;
    object(build: (builder: ObjectValueBuilder) => void): this;
    expr(context: Value, build: (builder: ExpressionValueBuilder) => void): this;
    value(value: Value): this;
    get elements(): Value[];
    build(): ArgumentsValue;
}
