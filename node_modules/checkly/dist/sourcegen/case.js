"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cased = exports.screamingKebabCase = exports.kebabCase = exports.screamingSnakeCase = exports.snakeCase = exports.trainCase = exports.pascalCase = exports.camelCase = void 0;
function camelCase(value) {
    return wordify(value).map((word, index) => {
        if (index === 0) {
            return word.toLowerCase();
        }
        const initial = word.slice(0, 1).toUpperCase();
        const rest = word.slice(1).toLowerCase();
        return initial + rest;
    }).join('');
}
exports.camelCase = camelCase;
function pascalCase(value) {
    return wordify(value).map(word => {
        const initial = word.slice(0, 1).toUpperCase();
        const rest = word.slice(1).toLowerCase();
        return initial + rest;
    }).join('');
}
exports.pascalCase = pascalCase;
function trainCase(value) {
    return wordify(value).map(word => {
        const initial = word.slice(0, 1).toUpperCase();
        const rest = word.slice(1).toLowerCase();
        return initial + rest;
    }).join('-');
}
exports.trainCase = trainCase;
function snakeCase(value) {
    return wordify(value).map(word => word.toLowerCase()).join('_');
}
exports.snakeCase = snakeCase;
function screamingSnakeCase(value) {
    return wordify(value).map(word => word.toUpperCase()).join('_');
}
exports.screamingSnakeCase = screamingSnakeCase;
function kebabCase(value) {
    return wordify(value).map(word => word.toLowerCase()).join('-');
}
exports.kebabCase = kebabCase;
function screamingKebabCase(value) {
    return wordify(value).map(word => word.toUpperCase()).join('-');
}
exports.screamingKebabCase = screamingKebabCase;
function cased(value, format) {
    switch (format) {
        case 'identity':
            return value;
        case 'camelCase':
            return camelCase(value);
        case 'PascalCase':
            return pascalCase(value);
        case 'Train-Case':
            return trainCase(value);
        case 'snake_case':
            return snakeCase(value);
        case 'SCREAMING_SNAKE_CASE':
            return screamingSnakeCase(value);
        case 'kebab-case':
            return kebabCase(value);
        case 'SCREAMING-KEBAB-CASE':
            return screamingKebabCase(value);
        default:
            return value;
    }
}
exports.cased = cased;
function wordify(value) {
    const words = [];
    let word = '';
    let small = false;
    for (const char of value.split('')) {
        if (char >= 'a' && char <= 'z') {
            word += char;
            small = true;
            continue;
        }
        if (char >= '0' && char <= '9') {
            word += char;
            small = true;
            continue;
        }
        if (char >= 'A' && char <= 'Z') {
            if (small) {
                words.push(word);
                word = char;
                small = false;
                continue;
            }
            word += char;
            continue;
        }
        if (word.length !== 0) {
            words.push(word);
            word = '';
            small = false;
            continue;
        }
    }
    if (word.length !== 0) {
        words.push(word);
    }
    return words;
}
//# sourceMappingURL=case.js.map