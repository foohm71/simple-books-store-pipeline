import { ArgumentsValueBuilder } from './argsbuilder';
import { ExpressionValue } from './expr';
import { Value } from './value';
export declare function expr(context: Value, build: (builder: ExpressionValueBuilder) => void): ExpressionValue;
export declare class ExpressionValueBuilder {
    #private;
    constructor(value: Value);
    new(build: (builder: ArgumentsValueBuilder) => void): this;
    call(build: (builder: ArgumentsValueBuilder) => void): this;
    member(property: Value): this;
    context(value: Value): this;
    build(): ExpressionValue;
}
