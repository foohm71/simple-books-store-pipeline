"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JSConfigFile = void 0;
const node_path_1 = __importDefault(require("node:path"));
const tsconfig_json_file_1 = require("./tsconfig-json-file");
/**
 * JSConfigFile is essentially the exact same as TSConfigFile but with
 * allowJs implicitly enabled.
 *
 * While we could handle jsconfig.json with just TSConfigFile, it's not that
 * much extra trouble to have a separate wrapper for it and doing it this way
 * may enable some interesting features later.
 */
class JSConfigFile extends tsconfig_json_file_1.TSConfigFile {
    static FILENAME = 'jsconfig.json';
    static #id = 0;
    id = ++JSConfigFile.#id;
    static filePath(dirPath) {
        return node_path_1.default.join(dirPath, JSConfigFile.FILENAME);
    }
    static loadFromJsonSourceFile(jsonFile) {
        return new JSConfigFile(jsonFile);
    }
}
exports.JSConfigFile = JSConfigFile;
//# sourceMappingURL=jsconfig-json-file.js.map