import { CheckProps } from '../constructs/check';
import { PlaywrightCheckProps } from '../constructs/playwright-check';
import { Construct } from '../constructs/construct';
import type { Region } from '..';
import { ReporterType } from '../reporters/reporter';
import { PlaywrightConfig } from '../constructs/playwright-config';
import { FileLoader } from '../loader';
export type CheckConfigDefaults = Pick<CheckProps, 'activated' | 'muted' | 'doubleCheck' | 'shouldFail' | 'runtimeId' | 'locations' | 'tags' | 'frequency' | 'environmentVariables' | 'alertChannels' | 'privateLocations' | 'retryStrategy' | 'alertEscalationPolicy'>;
export type PlaywrightSlimmedProp = Pick<PlaywrightCheckProps, 'name' | 'activated' | 'muted' | 'shouldFail' | 'locations' | 'tags' | 'frequency' | 'environmentVariables' | 'alertChannels' | 'privateLocations' | 'retryStrategy' | 'alertEscalationPolicy' | 'pwProjects' | 'pwTags' | 'installCommand' | 'testCommand' | 'groupName' | 'runParallel'> & {
    logicalId: string;
};
export type ChecklyConfig = {
    /**
     * Friendly name for your project.
     */
    projectName: string;
    /**
     * Unique project identifier.
     */
    logicalId: string;
    /**
     * Git repository URL.
     */
    repoUrl?: string;
    /**
     * Checks default configuration properties.
     */
    checks?: CheckConfigDefaults & {
        /**
         * Glob pattern where the CLI looks for files containing Check constructs, i.e. all `.checks.ts` files
         */
        checkMatch?: string | string[];
        /**
         * List of glob patterns with directories to ignore.
         */
        ignoreDirectoriesMatch?: string[];
        playwrightConfig?: PlaywrightConfig;
        /**
         * Browser checks default configuration properties.
         */
        browserChecks?: CheckConfigDefaults & {
            /**
             * Glob pattern where the CLI looks for Playwright test files, i.e. all `.spec.ts` files
             */
            testMatch?: string | string[];
        };
        /**
         * Multistep checks default configuration properties.
         */
        multiStepChecks?: CheckConfigDefaults & {
            /**
             * Glob pattern where the CLI looks for Playwright test files, i.e. all `.spec.ts` files
             */
            testMatch?: string | string[];
        };
        /**
         * Playwright config path to be used during bundling and playwright config parsing
         */
        playwrightConfigPath?: string;
        /**
         * Extra files to be included into the playwright bundle
         */
        include?: string | string[];
        /**
         * List of playwright checks that use the defined playwright config path
         */
        playwrightChecks?: PlaywrightSlimmedProp[];
    };
    /**
     * CLI default configuration properties.
     */
    cli?: {
        runLocation?: keyof Region;
        privateRunLocation?: string;
        verbose?: boolean;
        failOnNoMatching?: boolean;
        reporters?: ReporterType[];
        retries?: number;
        loader?: FileLoader;
    };
};
export declare function getChecklyConfigFile(): Promise<{
    checklyConfig: string;
    fileName: string;
} | undefined>;
export declare class ConfigNotFoundError extends Error {
}
export declare function loadChecklyConfig(dir: string, filenames?: string[]): Promise<{
    config: ChecklyConfig;
    constructs: Construct[];
}>;
