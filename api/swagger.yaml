openapi: 3.0.0
info:
  title: Simple Books API
  description: API for managing books and orders
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: {{baseUrl}}
    description: API server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          description: The book ID
        name:
          type: string
          description: The book name
        type:
          type: string
          description: The book type (fiction/non-fiction)
        available:
          type: boolean
          description: Whether the book is available
      required:
        - id
        - name
        - type
        - available

    Order:
      type: object
      properties:
        id:
          type: string
          description: The order ID
        bookId:
          type: integer
          description: The ID of the ordered book
        customerName:
          type: string
          description: The name of the customer
        createdBy:
          type: string
          description: The ID of the client who created the order
        quantity:
          type: integer
          description: The quantity of books ordered
        timestamp:
          type: string
          format: date-time
          description: The time when the order was created
      required:
        - id
        - bookId
        - customerName
        - createdBy
        - quantity
        - timestamp

    ApiClient:
      type: object
      properties:
        clientName:
          type: string
          description: The name of the client
        clientEmail:
          type: string
          format: email
          description: The email of the client
      required:
        - clientName
        - clientEmail

    ApiClientResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: The access token for the client

paths:
  /status:
    get:
      summary: Check API status
      description: Returns the current status of the API
      responses:
        '200':
          description: API is operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"

  /api-clients:
    post:
      summary: Register a new API client
      description: Register a new client to get an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClient'
      responses:
        '201':
          description: Client registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientResponse'

  /books:
    get:
      summary: Get list of books
      description: Retrieve a list of books, optionally filtered by type
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [fiction, non-fiction]
          description: Filter books by type
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /books/{bookId}:
    get:
      summary: Get a single book
      description: Retrieve details of a specific book
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
          description: ID of the book
      responses:
        '200':
          description: Book details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

  /orders:
    get:
      summary: Get all orders
      description: Retrieve all book orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

    post:
      summary: Create a new order
      description: Place an order for a book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                  description: ID of the book to order
                customerName:
                  type: string
                  description: Name of the customer
              required:
                - bookId
                - customerName
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /orders/{orderId}:
    get:
      summary: Get a single order
      description: Retrieve details of a specific order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: ID of the order
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order' 